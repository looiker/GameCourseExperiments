{"version":3,"sources":["event-listener.js"],"names":["EventListener","obj","Regsiter","on","name","method","hasOwnProperty","push","fire","handlerList","i","length","handler","args","j","arguments","apply","off","splice"],"mappings":";;;;;;;;;AAAA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAAUC,GAAV,EAAe;AACnC,MAAIC,WAAW,EAAf;AACAD,MAAIE,EAAJ,GAAS,UAAUC,IAAV,EAAiBC,MAAjB,EAAyB;AAChC,QAAI,CAACH,SAASI,cAAT,CAAwBF,IAAxB,CAAL,EAAmC;AACjCF,eAASE,IAAT,IAAiB,EAAjB;AACD;AACDF,aAASE,IAAT,EAAeG,IAAf,CAAoBF,MAApB;AACD,GALD;AAMAJ,MAAIO,IAAJ,GAAW,UAAUJ,IAAV,EAAgB;AACzB,QAAIF,SAASI,cAAT,CAAwBF,IAAxB,CAAJ,EAAkC;AAChC,UAAIK,cAAcP,SAASE,IAAT,CAAlB;AACA,WAAM,IAAIM,IAAI,CAAd,EAAkBA,IAAID,YAAYE,MAAlC,EAA2CD,GAA3C,EAAgD;AAC9C,YAAIE,UAAUH,YAAYC,CAAZ,CAAd;AACA,YAAIG,OAAO,EAAX;AACA,aAAK,IAAIC,IAAI,CAAb,EAAiBA,IAAIC,UAAUJ,MAA/B,EAAuCG,GAAvC,EAA4C;AAC1CD,eAAKN,IAAL,CAAUQ,UAAUD,CAAV,CAAV;AACD;AACDF,gBAAQI,KAAR,CAAc,IAAd,EAAoBH,IAApB;AACD;AACF;AACF,GAZD;AAaAZ,MAAIgB,GAAJ,GAAU,UAAUb,IAAV,EAAgBC,MAAhB,EAAwB;AAChC,QAAIH,SAASI,cAAT,CAAwBF,IAAxB,CAAJ,EAAkC;AAChC,UAAIK,cAAcP,SAASE,IAAT,CAAlB;AACA,WAAK,IAAIM,IAAI,CAAb,EAAiBA,IAAID,YAAYE,MAAjC,EAA0CD,GAA1C,EAA+C;AAC7C,YAAID,YAAYC,CAAZ,MAAmBL,MAAvB,EAA8B;AAC5BI,sBAAYS,MAAZ,CAAmBR,CAAnB,EAAsB,CAAtB;AACD;AACF;AACF;AACF,GATD;AAUA,SAAOT,GAAP;AACD,CAhCD;kBAiCeD","file":"event-listener.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const EventListener = function (obj) {\r\n  let Regsiter = {};\r\n  obj.on = function (name , method) {\r\n    if (!Regsiter.hasOwnProperty(name)){\r\n      Regsiter[name] = [];\r\n    }\r\n    Regsiter[name].push(method);\r\n  };\r\n  obj.fire = function (name) {\r\n    if (Regsiter.hasOwnProperty(name)){\r\n      let handlerList = Regsiter[name];\r\n      for  (let i = 0 ; i < handlerList.length ; i ++){\r\n        let handler = handlerList[i];\r\n        let args = [];\r\n        for (let j = 1 ; j < arguments.length ;j ++){\r\n          args.push(arguments[j]);\r\n        }\r\n        handler.apply(this, args);\r\n      }\r\n    }\r\n  };\r\n  obj.off = function (name, method) {\r\n    if (Regsiter.hasOwnProperty(name)){\r\n      let handlerList = Regsiter[name];\r\n      for (let i = 0 ; i < handlerList.length ; i ++){\r\n        if (handlerList[i] === method){\r\n          handlerList.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return obj\r\n};\r\nexport default EventListener;"]}