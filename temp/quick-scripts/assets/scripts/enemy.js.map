{"version":3,"sources":["enemy.js"],"names":["EnemyState","Invalid","Running","EndPath","Dead","cc","Class","extends","Component","properties","spriteFrames","default","type","SpriteFrame","spriteNode","Sprite","onLoad","state","node","opacity","direction","p","currentPathPointCount","currentHealthCount","totalHealthCount","initWithData","pathPoints","spriteFrame","position","loader","loadRes","err","result","log","config","json","JSON","stringify","enemy_0","speed","health","setState","update","dt","distance","sub","mag","length","normalize","add","mul","action","fadeOut","sequence","callFunc","destroy","runAction"],"mappings":";;;;;;AAAA,IAAMA,aAAa;AACjBC,aAAS,CAAC,CADO;AAEjBC,aAAS,CAFQ;AAGjBC,aAAS,CAHQ;AAIjBC,UAAM;AAJW,CAAnB;AAMAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACVC,sBAAc;AACZC,qBAAS,EADG;AAEZC,kBAAMP,GAAGQ;AAFG,SADJ;AAKZC,oBAAY;AACVH,qBAAS,IADC;AAEVC,kBAAMP,GAAGU;AAFC;AALA,KAHP;;AAcLC,YAAQ,kBAAY;AAClB,aAAKC,KAAL,GAAajB,WAAWC,OAAxB;AACA,aAAKiB,IAAL,CAAUC,OAAV,GAAoB,CAApB;AACA,aAAKC,SAAL,GAAiBf,GAAGgB,CAAH,CAAK,CAAL,EAAQ,CAAR,CAAjB;AACA,aAAKC,qBAAL,GAA6B,CAA7B;AACA,aAAKC,kBAAL,GAA0B,CAA1B;AACA,aAAKC,gBAAL,GAAwB,CAAxB;AACH,KArBM;AAsBP;AACAC,kBAAc,sBAAUb,IAAV,EAAgBc,UAAhB,EAA4B;AAAA;;AACxC;AACA,aAAKZ,UAAL,CAAgBa,WAAhB,GAA8B,KAAKjB,YAAL,CAAkBE,IAAlB,CAA9B;AACA,aAAKc,UAAL,GAAkBA,UAAlB;AACA,aAAKR,IAAL,CAAUU,QAAV,GAAqBF,WAAW,CAAX,EAAcE,QAAnC;AACAvB,WAAGwB,MAAH,CAAUC,OAAV,CAAkB,yBAAlB,EAA6C,UAACC,GAAD,EAAMC,MAAN,EAAe;AACxD,gBAAID,GAAJ,EAAQ;AACJ1B,mBAAG4B,GAAH,CAAOF,GAAP;AACH,aAFD,MAEM;AACF;AACA1B,mBAAG4B,GAAH,CAAO,QAAP;AACA,oBAAIC,SAASF,OAAOG,IAAP,CAAY,WAAWvB,IAAvB,CAAb;AACAP,mBAAG4B,GAAH,CAAOG,KAAKC,SAAL,CAAeL,OAAOG,IAAP,CAAYG,OAA3B,CAAP;AACA,sBAAKC,KAAL,GAAaL,OAAOK,KAApB;AACAlC,mBAAG4B,GAAH,CAAO,SAAP;AACA,sBAAKV,kBAAL,GAA0BW,OAAOM,MAAjC;AACA,sBAAKhB,gBAAL,GAAwBU,OAAOM,MAA/B;AACA,sBAAKC,QAAL,CAAczC,WAAWE,OAAzB;AACH;AACJ,SAdD;AAgBH,KA5CQ;AA6CPwC,YAAQ,gBAAUC,EAAV,EAAc;AACpB,YAAI,KAAK1B,KAAL,KAAejB,WAAWE,OAA9B,EAAsC;AAClC,gBAAI0C,WAAW,KAAK1B,IAAL,CAAUU,QAAV,CAAmBiB,GAAnB,CAAuB,KAAKnB,UAAL,CAAgB,KAAKJ,qBAArB,EAA4CM,QAAnE,EAA6EkB,GAA7E,EAAf;AACA,gBAAIF,WAAW,EAAf,EAAkB;AACd,qBAAKtB,qBAAL;AACA,oBAAI,KAAKA,qBAAL,KAA+B,KAAKI,UAAL,CAAgBqB,MAAnD,EAA0D;AACtD,yBAAKN,QAAL,CAAczC,WAAWG,OAAzB;AACA;AACH;AACD,qBAAKiB,SAAL,GAAiB,KAAKM,UAAL,CAAgB,KAAKJ,qBAArB,EAA4CM,QAA5C,CAAqDiB,GAArD,CAAyD,KAAK3B,IAAL,CAAUU,QAAnE,EAA6EoB,SAA7E,EAAjB;AACH,aAPD,MAOM;;AAEE,qBAAK9B,IAAL,CAAUU,QAAV,GAAqB,KAAKV,IAAL,CAAUU,QAAV,CAAmBqB,GAAnB,CAAuB,KAAK7B,SAAL,CAAe8B,GAAf,CAAoB,KAAKX,KAAL,GAAaI,EAAjC,CAAvB,CAArB;AACH;AACR;AACD;AACH,KA7DQ;AA8DTF,cAAU,kBAAUxB,KAAV,EAAiB;AAAA;;AACzB,YAAI,KAAKA,KAAL,KAAeA,KAAnB,EAAyB;AACrB;AACH;AACD,gBAAQA,KAAR;AACI,iBAAKjB,WAAWE,OAAhB;AACI,qBAAKgB,IAAL,CAAUC,OAAV,GAAoB,GAApB;AACA;AACJ,iBAAKnB,WAAWI,IAAhB;AACI,oBAAI+C,SAAS9C,GAAG+C,OAAH,CAAW,CAAX,CAAb;AACA,oBAAIC,WAAWhD,GAAGgD,QAAH,CAAYF,MAAZ,EAAoB9C,GAAGiD,QAAH,CAAY,YAAI;AAC/CjD,uBAAG4B,GAAH,CAAO,IAAP;AACA,2BAAKf,IAAL,CAAUqC,OAAV;AACH,iBAHkC,CAApB,CAAf;AAIA,qBAAKrC,IAAL,CAAUsC,SAAV,CAAoBH,QAApB;;AAGA;AACJ,iBAAKrD,WAAWG,OAAhB;AACI;AACJ;AACI;AAjBR;AAmBA,aAAKc,KAAL,GAAaA,KAAb;AACD;;AAtFQ,CAAT","file":"enemy.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const EnemyState = {\r\n  Invalid: -1,\r\n  Running: 1,\r\n  EndPath: 2,\r\n  Dead: 3\r\n};\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n      spriteFrames: {\r\n        default: [],\r\n        type: cc.SpriteFrame\r\n    },\r\n    spriteNode: {\r\n      default: null,\r\n      type: cc.Sprite\r\n    }\r\n    },\r\n\r\n    onLoad: function () {\r\n      this.state = EnemyState.Invalid;\r\n      this.node.opacity = 0;\r\n      this.direction = cc.p(0, 0);\r\n      this.currentPathPointCount = 0;\r\n      this.currentHealthCount = 0;\r\n      this.totalHealthCount = 1;\r\n  },\r\n  //初始化函数\r\n  initWithData: function (type, pathPoints) {\r\n    //0 - 6\r\n    this.spriteNode.spriteFrame = this.spriteFrames[type];\r\n    this.pathPoints = pathPoints;\r\n    this.node.position = pathPoints[0].position;\r\n    cc.loader.loadRes(\"./config/monster_config\", (err, result)=>{\r\n        if (err){\r\n            cc.log(err);\r\n        }else {\r\n            // cc.log(\"enemy result = \" + JSON.stringify(result));\r\n            cc.log(\"canrun\");\r\n            let config = result.json[\"enemy_\" + type];\r\n            cc.log(JSON.stringify(result.json.enemy_0));\r\n            this.speed = config.speed;\r\n            cc.log(\"can1run\");\r\n            this.currentHealthCount = config.health;\r\n            this.totalHealthCount = config.health;\r\n            this.setState(EnemyState.Running);\r\n        }\r\n    });\r\n\r\n},\r\n  update: function (dt) {\r\n    if (this.state === EnemyState.Running){\r\n        let distance = this.node.position.sub(this.pathPoints[this.currentPathPointCount].position).mag();\r\n        if (distance < 10){\r\n            this.currentPathPointCount ++;\r\n            if (this.currentPathPointCount === this.pathPoints.length){\r\n                this.setState(EnemyState.EndPath);\r\n                return\r\n            }\r\n            this.direction = this.pathPoints[this.currentPathPointCount].position.sub(this.node.position).normalize();\r\n        }else {\r\n\r\n                this.node.position = this.node.position.add(this.direction.mul( this.speed * dt));\r\n            }\r\n    }\r\n    //this.healthProgressBar.progress = this.currentHealthCount / this.totalHealthCount;\r\n},\r\nsetState: function (state) {\r\n  if (this.state === state){\r\n      return ;\r\n  }\r\n  switch (state){\r\n      case EnemyState.Running:\r\n          this.node.opacity = 255;\r\n          break;\r\n      case EnemyState.Dead:\r\n          let action = cc.fadeOut(1);\r\n          let sequence = cc.sequence(action, cc.callFunc(()=>{\r\n              cc.log(\"死了\");\r\n              this.node.destroy();\r\n          }));\r\n          this.node.runAction(sequence);\r\n\r\n\r\n          break;\r\n      case EnemyState.EndPath:\r\n          break;\r\n      default:\r\n          break;\r\n  }\r\n  this.state = state;\r\n},\r\n\r\n\r\n});\r\n"]}