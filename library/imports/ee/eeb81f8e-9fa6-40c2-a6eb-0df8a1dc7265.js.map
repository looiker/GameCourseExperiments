{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Menu.js"],"names":["TowerPosNodeStateP","invild","Null","Tower","BuildMenu","UpDateMenu","Menu","cc","Class","extends","Component","properties","Archer","Node","Caster","Gunturret","Update","Sale","onLoad","node","parent","Build_Archer","tower","getComponent","tower_all","realUrl","url","raw","towerbasic","TowerBasic","Button","tempSprite","SpriteFrame","normalSprite","pressedSprite","hoverSprite","SizeOfAttack","RadiusOfAttack","attack_circle","children","scale","TowerLevel","TowerType","DamageOfAttack","closeMenu","setTowerState","opacity","Build_Caster","Build_Gunturret","Update_Tower","towertype","log","Sale_Tower"],"mappings":"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","file":"Menu.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["/**\r\n * Menu实现塔菜单下的按钮事件\r\n * 实现以下功能：\r\n * <1>在BuildMenu状态下：点击三塔（箭、法、炮）按钮时，建造塔，修改塔属性。closeMenu()后，塔状态设置为Tower。\r\n * <2>在UpdateMenu状态下：点击升级，可升级塔，塔等级+1，修改塔属性。closeMenu()。（无需设置塔状态，销毁后已是Tower）。\r\n * <3>在UpdateMenu状态下：点击售卖，可售卖塔，初始化塔基。closeMenu()后，设置塔状态为Null。\r\n * \r\n * 具有以下属性：\r\n * 1、箭塔节点\r\n * 2、魔法塔节点\r\n * 3、炮塔节点\r\n * 4、升级节点\r\n * 5、售卖节点\r\n * 6、父节点Tower\r\n */\r\n\r\n/**\r\n * 添加状态机\r\n */\r\nconst TowerPosNodeStateP = {\r\n\tinvild:    -1,\r\n\tNull:       1,\r\n\tTower:      2,\r\n\tBuildMenu:  3,\r\n\tUpDateMenu: 4\r\n}\r\n\r\nvar Menu = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        Archer:cc.Node,\r\n        Caster:cc.Node,\r\n        Gunturret:cc.Node,\r\n        Update:cc.Node,\r\n        Sale:cc.Node,\r\n        Tower:cc.Node\r\n    },\r\n\r\n    onLoad(){\r\n        this.Tower = this.node.parent;\r\n    },\r\n\r\n    /**\r\n     * 点击箭塔\r\n     */\r\n    Build_Archer:function(){\r\n        let tower = this.Tower.getComponent(\"Tower\");\r\n        let tower_all = this.Tower.parent.getComponent(\"Tower_ALL\");\r\n        //获取图片url\r\n        let realUrl = cc.url.raw('texture/Tower/archer1.png');\r\n        //获取TowerBasic\r\n        let towerbasic = tower.TowerBasic.getComponent(cc.Button);\r\n        //创建Sprite\r\n        var tempSprite = new cc.SpriteFrame(realUrl);\r\n        //更换塔立绘\r\n        towerbasic.normalSprite = tempSprite;\r\n        towerbasic.pressedSprite = tempSprite;\r\n        towerbasic.hoverSprite = tempSprite;\r\n        //修改塔属性\r\n        tower.SizeOfAttack = 1.5;\r\n        tower.RadiusOfAttack = 320 * tower.SizeOfAttack;\r\n        tower.attack_circle.children[0].scale = tower.SizeOfAttack;\r\n        tower.TowerLevel = 1;\r\n        tower.TowerType = 1;\r\n        tower.DamageOfAttack = 10;\r\n        //销毁建造菜单\r\n        tower_all.closeMenu();\r\n        //设置塔状态为Tower\r\n        tower.setTowerState(TowerPosNodeStateP.Tower);\r\n        //保留攻击圈\r\n        tower.attack_circle.opacity = 255;\r\n    },\r\n\r\n    /**\r\n     * 点击魔法塔\r\n     */\r\n    Build_Caster:function(){\r\n        let tower = this.Tower.getComponent(\"Tower\");\r\n        let tower_all = this.Tower.parent.getComponent(\"Tower_ALL\");\r\n        let realUrl = cc.url.raw('texture/Tower/caster1.png');\r\n        let towerbasic = tower.TowerBasic.getComponent(cc.Button);\r\n        var tempSprite = new cc.SpriteFrame(realUrl);\r\n        towerbasic.normalSprite = tempSprite;\r\n        towerbasic.pressedSprite = tempSprite;\r\n        towerbasic.hoverSprite = tempSprite;\r\n        \r\n        tower.SizeOfAttack = 1.0;\r\n        tower.RadiusOfAttack = 320 * tower.SizeOfAttack;\r\n        tower.attack_circle.children[0].scale = tower.SizeOfAttack;\r\n        tower.TowerLevel = 1;\r\n        tower.TowerType = 2;\r\n        tower.DamageOfAttack = 25;\r\n        \r\n        tower_all.closeMenu();\r\n        tower.setTowerState(TowerPosNodeStateP.Tower);\r\n        tower.attack_circle.opacity = 255;\r\n    },\r\n\r\n    /**\r\n     * 点击炮塔\r\n     */\r\n    Build_Gunturret:function(){\r\n        let tower = this.Tower.getComponent(\"Tower\");\r\n        let tower_all = this.Tower.parent.getComponent(\"Tower_ALL\");\r\n        let realUrl = cc.url.raw('texture/Tower/gunturret1.png');\r\n        let towerbasic = tower.TowerBasic.getComponent(cc.Button);\r\n        var tempSprite = new cc.SpriteFrame(realUrl);\r\n        towerbasic.normalSprite = tempSprite;\r\n        towerbasic.pressedSprite = tempSprite;\r\n        towerbasic.hoverSprite = tempSprite;\r\n        \r\n        tower.SizeOfAttack = 0.8;\r\n        tower.RadiusOfAttack = 320 * tower.SizeOfAttack;\r\n        tower.attack_circle.children[0].scale = tower.SizeOfAttack;\r\n        tower.TowerLevel = 1;\r\n        tower.TowerType = 3;\r\n        tower.DamageOfAttack = 18;\r\n        \r\n        tower_all.closeMenu();\r\n        tower.setTowerState(TowerPosNodeStateP.Tower);\r\n        tower.attack_circle.opacity = 255;\r\n    },\r\n\r\n    /**\r\n     * 点击升级 需要根据塔的类型进行不同升级\r\n     */\r\n    Update_Tower:function(){\r\n        let tower = this.Tower.getComponent(\"Tower\");\r\n        let tower_all = this.Tower.parent.getComponent(\"Tower_ALL\");\r\n        let towertype = tower.TowerType;\r\n        switch(towertype){\r\n            case 1: {\r\n                //获取图片url\r\n                let realUrl = cc.url.raw('texture/Tower/archer2.png');\r\n                //获取TowerBasic\r\n                let towerbasic = tower.TowerBasic.getComponent(cc.Button);\r\n                //创建Sprite\r\n                let tempSprite = new cc.SpriteFrame(realUrl);\r\n                //更换塔立绘\r\n                towerbasic.normalSprite = tempSprite;\r\n                towerbasic.pressedSprite = tempSprite;\r\n                towerbasic.hoverSprite = tempSprite;\r\n                //修改塔属性\r\n                tower.SizeOfAttack = 2.0;\r\n                tower.RadiusOfAttack = 320 * tower.SizeOfAttack;\r\n                tower.attack_circle.children[0].scale = tower.SizeOfAttack;\r\n                tower.TowerLevel += 1;\r\n                tower.TowerType = 10;\r\n                tower.DamageOfAttack = 12;\r\n                //销毁建造菜单\r\n                tower_all.closeMenu();\r\n                //升级塔不需要设置塔状态，销毁时已经设置了\r\n                break;\r\n            }\r\n            case 2:{\r\n                let realUrl = cc.url.raw('texture/Tower/caster2.png');\r\n                let towerbasic = tower.TowerBasic.getComponent(cc.Button);\r\n                let tempSprite = new cc.SpriteFrame(realUrl);\r\n                towerbasic.normalSprite = tempSprite;\r\n                towerbasic.pressedSprite = tempSprite;\r\n                towerbasic.hoverSprite = tempSprite;\r\n                \r\n                tower.SizeOfAttack = 1.2;\r\n                tower.RadiusOfAttack = 320 * tower.SizeOfAttack;\r\n                tower.attack_circle.children[0].scale = tower.SizeOfAttack;\r\n                tower.TowerLevel += 1;\r\n                tower.TowerType = 20;\r\n                tower.DamageOfAttack = 40;\r\n                \r\n                tower_all.closeMenu();\r\n                break;\r\n            }\r\n            case 3:{\r\n                let realUrl = cc.url.raw('texture/Tower/gunturret2.png');\r\n                let towerbasic = tower.TowerBasic.getComponent(cc.Button);\r\n                let tempSprite = new cc.SpriteFrame(realUrl);\r\n                towerbasic.normalSprite = tempSprite;\r\n                towerbasic.pressedSprite = tempSprite;\r\n                towerbasic.hoverSprite = tempSprite;\r\n                \r\n                tower.SizeOfAttack = 1.0;\r\n                tower.RadiusOfAttack = 320 * tower.SizeOfAttack;\r\n                tower.attack_circle.children[0].scale = tower.SizeOfAttack;\r\n                tower.TowerLevel += 1;\r\n                tower.TowerType = 30;\r\n                tower.DamageOfAttack = 25;\r\n                \r\n                tower_all.closeMenu();\r\n                break;\r\n            }\r\n            default:{\r\n                cc.log(\"已经升级到最高级！\");\r\n                break;\r\n            }\r\n        }\r\n        //保留攻击圈\r\n        tower.attack_circle.opacity = 255;\r\n    },\r\n\r\n    /**\r\n     * 点击售卖\r\n     */\r\n    Sale_Tower:function(){\r\n        let tower = this.Tower.getComponent(\"Tower\");\r\n        let tower_all = this.Tower.parent.getComponent(\"Tower_ALL\");\r\n        //修改塔数据\r\n        tower.SizeOfAttack=1.0;\r\n        tower.RadiusOfAttack=320;\r\n        tower.attack_circle.children[0].scale = tower.SizeOfAttack;\r\n\t\ttower.TowerLevel = 0;\r\n        //初始化塔基立绘\r\n\t\t let realUrl = cc.url.raw('texture/Tower/Tower_normal.png');\r\n\t\t let towerbasic = tower.TowerBasic.getComponent(cc.Button);\r\n\t\t let tempSprite = new cc.SpriteFrame(realUrl);\r\n\t\t towerbasic.normalSprite = tempSprite;\r\n\t\t towerbasic.pressedSprite = tempSprite;\r\n\t\t realUrl = cc.url.raw('texture/Tower/Tower_hover.png');\r\n\t\t tempSprite = new cc.SpriteFrame(realUrl);\r\n\t\t towerbasic.hoverSprite = tempSprite;\r\n        //销毁建造菜单\r\n        tower_all.closeMenu();\r\n        //设置塔状态为Null\r\n        tower.setTowerState(TowerPosNodeStateP.Null);\r\n    },\r\n});\r\n"]}